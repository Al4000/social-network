{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","../node_modules/@material-ui/core/esm/Icon/Icon.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","className","cl","dialog","to","id","dialog_link","dialog_avatar","src","avatar","alt","name","Message","typeClass","type","message_incoming","message_outcoming","message","Icon","React","ref","classes","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","muiName","withStyles","theme","userSelect","typography","pxToRem","width","height","overflow","flexShrink","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","renderTextField","label","input","custom","TextField","placeholder","variant","input_message","SendReduxForm","reduxForm","form","onSubmit","handleSubmit","input_fields","Field","rows","Button","endIcon","pristine","Dialogs","state","messagesPage","dialogElements","dialogs","map","key","messagesElements","messages","msg","isAuth","dialogs_items","values","addMessage","newMessageText","compose","connect","withAuthRedirect"],"mappings":"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","file":"static/js/4.65e60e35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2lTUd\",\"dialogs_items\":\"Dialogs_dialogs_items__2K_0p\",\"messages\":\"Dialogs_messages__1IUc3\",\"input_message\":\"Dialogs_input_message__3ccYc\",\"input_fields\":\"Dialogs_input_fields__2vhz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2m_qS\",\"active\":\"Dialog_active__3aTNT\",\"dialog_avatar\":\"Dialog_dialog_avatar__Q7GZ7\",\"dialog_link\":\"Dialog_dialog_link__3oyh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Y0zV\",\"message_incoming\":\"Message_message_incoming__2FZX7\",\"message_outcoming\":\"Message_message_outcoming__3mGfB\"};","import React from 'react'\r\nimport cl from './Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Dialog = (props) => {\r\n  return (\r\n    <div className={ cl.dialog }>\r\n      <NavLink to={ \"/dialogs/\" + props.id } className={ cl.dialog_link }>\r\n        <div className={ cl.dialog_avatar }>\r\n          <img src={ props.avatar } alt=\"\"/>\r\n        </div>\r\n        { props.name }\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog\r\n","import React from 'react'\r\nimport cl from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  let typeClass = props.type === 'incoming' ? cl.message_incoming : cl.message_outcoming\r\n  \r\n  return (\r\n    <div className={`${cl.message} ${typeClass} `}>\r\n      { props.message }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import React from 'react'\r\nimport cl from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog'\r\nimport Message from './Message/Message'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Icon from '@material-ui/core/Icon'\r\n\r\nconst Dialogs = (props) => {\r\n\tlet state = props.messagesPage\r\n\tlet dialogElements = state.dialogs.map((dialog) => {\r\n\t\treturn (\r\n\t\t\t<Dialog\r\n\t\t\t\tname={dialog.name}\r\n\t\t\t\tid={dialog.id}\r\n\t\t\t\tavatar={dialog.avatar}\r\n\t\t\t\tkey={dialog.id}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\tlet messagesElements = state.messages.map((msg) => {\r\n\t\treturn (\r\n\t\t\t<Message\r\n\t\t\t\tmessage={msg.message}\r\n\t\t\t\ttype={msg.type}\r\n\t\t\t\tkey={msg.id}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.addMessage(values.newMessageText)\r\n\t}\r\n\r\n\tif (!props.isAuth) {\r\n\t\treturn <Redirect to={'/login'}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={cl.dialogs}>\r\n\t\t\t\t<div className={cl.dialogs_items}>\r\n\t\t\t\t\t{dialogElements}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={cl.messages}>\r\n\t\t\t\t\t{messagesElements}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<SendReduxForm onSubmit={addNewMessage}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst renderTextField =\r\n\t({\r\n\t\t label,\r\n\t\t input,\r\n\t\t ...custom\r\n\t }) => (\r\n\t\t<TextField\r\n\t\t\tid=\"outlined-multiline-flexible\"\r\n\t\t\tlabel={label}\r\n\t\t\tplaceholder={label}\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tclassName={cl.input_message}\r\n\t\t\t{...input}\r\n\t\t\t{...custom}\r\n\t\t/>\r\n\t)\r\n\r\nconst SendForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div className={cl.input_fields}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\tcomponent={renderTextField}\r\n\t\t\t\t\tname={'newMessageText'}\r\n\t\t\t\t\tlabel={'Enter a message..'}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\ttype={'submit'}\r\n\t\t\t\t\tendIcon={<Icon>send</Icon>}\r\n\t\t\t\t\tdisabled={props.pristine}\r\n\t\t\t\t>\r\n\t\t\t\t\tSend\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst SendReduxForm = reduxForm({\r\n\tform: 'messageSend'\r\n})(SendForm)\r\n\r\nexport default Dialogs\r\n","import {addMessage} from '../../redux/messagesReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tmessagesPage: state.messagesPage\r\n})\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {addMessage}),\r\n\twithAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}